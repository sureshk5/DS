#include<iostream>
using namespace std;

struct node
	{
		int data;
		struct node *next;
	};
	
	struct node *head= NULL;
		struct node *temp,*newnode;
	int ch;
	int con;
	void insert();
	void display();	
//	void deleteEle();
	void InsertAtBegin();
	
	int main()
	{
		do{
			cout<<"1.insert\n";
			cout<<"2.display\n";
			cout<<"3.InsertAtBegin\n";
			cout<<"exit\n";
			cout<<"enter your choice\n";
			cin>>ch;
			switch(ch)
			{
				case 1: insert();
						break;
				case 2: display();
						break;
				case 3:InsertAtBegin();
						break;
				case 4:exit(4);
				default:
				cout<<"invalid selection\n";
					
			}
			cout<<"enter 1 to continue and 0 to exit\n";
			cin>>con;
		}while(con==1);
		
	}
	
	void insert(){
		struct node *newnode;
		newnode=new node();
		cout<<"enter data element\n";
		cin>>newnode->data;
		newnode->next=NULL;
		
		if(head==NULL)
		{
			head=newnode;
			temp=newnode;
		}
		else
		{
			 temp->next=newnode;
			 temp=newnode;
		}
		
	/*	else{
			struct node *p;
			p = temp;
			p=p->next;
			
		}
		  temp = p->next;*/
	}
	
	void display()
	{
		struct node *p;
		p = head;
		if(p==NULL)
		{
			cout<<"currently list is empty\n";
			
		}
		else{
			

		while(p->next!=NULL)
		{
		cout<<p->data<<endl;
		p = p->next;	
		}
		cout<<p->data<<endl;
		}
	}
	void insertAtBegin()
	{
		newnode = new node();
		cout<<"enter the data element\n";
		cin>>newnode->data;
		newnode->next=NULL;
		
		if(head==NULL)
		{
			head = newnode;
		}
		else
		{
			newnode->next = head;
			 head = newnode;	
		}
			
		}	
	
